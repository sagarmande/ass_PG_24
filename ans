

**Question 1:**
```python
def amplify(num):
    return [i * 10 if i % 4 == 0 else i for i in range(1, num + 1)]

# Test cases
print(amplify(4))  # ➞ [1, 2, 3, 40]
print(amplify(3))  # ➞ [1, 2, 3]
print(amplify(25)) # ➞ [1, 2, 3, 40, 5, 6, 7, 80, 9, 10, 11, 120, 13, 14, 15, 160, 17, 18, 19, 200, 21, 22, 23, 240, 25]
```

**Question 2:**
```python
def unique(lst):
    for num in lst:
        if lst.count(num) == 1:
            return num

# Test cases
print(unique([3, 3, 3, 7, 3, 3]))      # ➞ 7
print(unique([0, 0, 0.77, 0, 0]))      # ➞ 0.77
print(unique([0, 1, 1, 1, 1, 1, 1, 1])) # ➞ 0
```

**Question 3:**
```python
import math

class Circle:
    def __init__(self, radius):
        self.radius = radius
    
    def getArea(self):
        return math.ceil(math.pi * self.radius ** 2)
    
    def getPerimeter(self):
        return math.ceil(2 * math.pi * self.radius)

# Test cases
circy = Circle(11)
print(circy.getArea())       # ➞ 380
circy = Circle(4.44)
print(circy.getPerimeter())  # ➞ 28
```

**Question 4:**
```python
def sort_by_length(strings):
    return sorted(strings, key=len)

# Test cases
print(sort_by_length(["Google", "Apple", "Microsoft"]))             # ➞ ["Apple", "Google", "Microsoft"]
print(sort_by_length(["Leonardo", "Michelangelo", "Raphael", "Donatello"])) # ➞ ["Raphael", "Leonardo", "Donatello", "Michelangelo"]
print(sort_by_length(["Turing", "Einstein", "Jung"]))               # ➞ ["Jung", "Turing", "Einstein"]
```

**Question 5:**
```python
def is_triplet(a, b, c):
    # Sort the numbers to ensure a < b < c
    a, b, c = sorted([a, b, c])
    return a ** 2 + b ** 2 == c ** 2

# Test cases
print(is_triplet(3, 4, 5))   # ➞ True
print(is_triplet(13, 5, 12)) # ➞ True
print(is_triplet(1, 2, 3))   # ➞ False
```
